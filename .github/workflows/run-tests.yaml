name: run-tests

on:
  push:
    branches-ignore:
      - weblate
  # pull_request:
  # schedule:
  #     -   cron: '0 0 * * *'

jobs:
  test:
    #  skip test for ci commits
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [ 8.1 ]
        dependency-version: [ prefer-stable ]

    env:
      extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysqli, bcmath, soap, intl, gd, exif, iconv, imagick, redis

    name: P${{ matrix.php }} - ${{ matrix.dependency-version }}

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Set locale
        run: sudo locale-gen de_CH.UTF-8

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare The Environment
        run: cp .env.example .env

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP extensions
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: php-extensions-cache-v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          coverage: xdebug

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Setup private repository access
        run: |
          composer config --global http-basic.satis.novu.ch ${{ secrets.SATIS_CI_USER }} ${{ secrets.SATIS_CI_PASSWORD }}
      #          composer config --global http-basic.nova.laravel.com ${{ secrets.NOVA_USER }} ${{ secrets.NOVA_PASSWORD }}

      - name: Install dependencies
        run: |
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Generate Application Key
        run: php artisan key:generate

      #      - name: Setup Passport Keys
      #        run: php artisan passport:keys

      #      - name: Setup JWT Secret
      #        run: php artisan jwt:secret --force

      - name: Execute tests
        run: vendor/bin/pest --parallel --processes=5 --coverage
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_DATABASE: test
          DB_PASSWORD: password
          SCOUT_DRIVER: 'null'

      - name: Dump logs
        if: failure()
        run: cat storage/logs/*.log || true
